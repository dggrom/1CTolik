<ПравилаОбмена>
	<ВерсияФормата РежимСовместимости="РежимСовместимостиСБСП20">2.01</ВерсияФормата>
	<Ид>0950174f-6a46-4f8c-bb29-e6171dfdc3ba    </Ид>
	<Наименование>МатГруппы - БГУ2 (2.0)</Наименование>
	<ДатаВремяСоздания>2020-02-26T23:09:27</ДатаВремяСоздания>
	<Источник ВерсияПлатформы="8.0" ВерсияКонфигурации="2.0.66.17" СинонимКонфигурации="Бухгалтерия государственного учреждения, редакция 2.0">БухгалтерияГосударственногоУчреждения</Источник>
	<Приемник ВерсияПлатформы="8.0" ВерсияКонфигурации="2.0.65.20" СинонимКонфигурации="Бухгалтерия государственного учреждения, редакция 2.0">БухгалтерияГосударственногоУчреждения</Приемник>
	<ПослеЗагрузкиПравилОбмена>Параметры.НачалоПериода = ДатаНачала;
Параметры.КонецПериода = ДатаОкончания;

ЕстьОшибки = Ложь;
Если НЕ ЗначениеЗаполнено(Параметры.НачалоПериода) Тогда
	Сообщить("Не заполнена дата начала");
	ЕстьОшибки = Истина;
КонецЕсли;

Если Не ЗначениеЗаполнено(Параметры.КонецПериода) Тогда
	Сообщить("Не заполнена дата окончания");
	ЕстьОшибки = Истина;
КонецЕсли;

Если ЕстьОшибки Тогда
	Сообщить("необходимо заполнить все параметры");
	Отказ = Истина;
КонецЕсли;

Параметры.ТаблицаПроводок = Новый ТаблицаЗначений;
Параметры.ТаблицаПроводок.Колонки.Добавить("СубконтоДт");
Параметры.ТаблицаПроводок.Колонки.Добавить("СубконтоКт");
Параметры.ТаблицаПроводок.Колонки.Добавить("Баланс");
Параметры.ТаблицаПроводок.Колонки.Добавить("ВалютаДт");
Параметры.ТаблицаПроводок.Колонки.Добавить("ВалютаКт");
Параметры.ТаблицаПроводок.Колонки.Добавить("КБКДт");
Параметры.ТаблицаПроводок.Колонки.Добавить("КБККт");
Параметры.ТаблицаПроводок.Колонки.Добавить("КВД");
Параметры.ТаблицаПроводок.Колонки.Добавить("КПСДт");
Параметры.ТаблицаПроводок.Колонки.Добавить("КПСКт");
Параметры.ТаблицаПроводок.Колонки.Добавить("КФО");
Параметры.ТаблицаПроводок.Колонки.Добавить("ИФО");
Параметры.ТаблицаПроводок.Колонки.Добавить("Организация");
Параметры.ТаблицаПроводок.Колонки.Добавить("ВидПервичногоДокумента");
Параметры.ТаблицаПроводок.Колонки.Добавить("ДатаПервичногоДокумента");
Параметры.ТаблицаПроводок.Колонки.Добавить("НомерЖурнала");
Параметры.ТаблицаПроводок.Колонки.Добавить("НомерПервичногоДокумента");
Параметры.ТаблицаПроводок.Колонки.Добавить("Содержание");
Параметры.ТаблицаПроводок.Колонки.Добавить("ХарактеристикаДвиженияДт");
Параметры.ТаблицаПроводок.Колонки.Добавить("ХарактеристикаДвиженияКт");
Параметры.ТаблицаПроводок.Колонки.Добавить("ВалютнаяСуммаДт");
Параметры.ТаблицаПроводок.Колонки.Добавить("ВалютнаяСуммаКт");
Параметры.ТаблицаПроводок.Колонки.Добавить("КоличествоДт");
Параметры.ТаблицаПроводок.Колонки.Добавить("КоличествоКт");
Параметры.ТаблицаПроводок.Колонки.Добавить("Сумма");
Параметры.ТаблицаПроводок.Колонки.Добавить("Активность");
Параметры.ТаблицаПроводок.Колонки.Добавить("Период");
Параметры.ТаблицаПроводок.Колонки.Добавить("Регистратор");
Параметры.ТаблицаПроводок.Колонки.Добавить("СчетДт");
Параметры.ТаблицаПроводок.Колонки.Добавить("СчетКт");
Параметры.ТаблицаПроводок.Колонки.Добавить("КЭКДт");
Параметры.ТаблицаПроводок.Колонки.Добавить("КЭККт");

Параметры.ПараметрыАлгоритмов = Новый Структура;

Параметры.ЗначенияСубконто = Новый Соответствие;
Параметры.ЗначенияСубконто.Вставить("БСО",Параметры.СубконтоБСО);
Параметры.ЗначенияСубконто.Вставить("Извещения",Параметры.СубконтоИзвещения);
Параметры.ЗначенияСубконто.Вставить("Контрагенты",Параметры.СубконтоКонтрагенты);
Параметры.ЗначенияСубконто.Вставить("Номенклатура",Параметры.СубконтоНоменклатура);
Параметры.ЗначенияСубконто.Вставить("СтатусыПоставки",Параметры.СубконтоСтатусыПоставки);
Параметры.ЗначенияСубконто.Вставить("ОсновныеСредства",Параметры.СубконтоОС);
Параметры.ЗначенияСубконто.Вставить("ЦМО",Параметры.СубконтоЦМО);
Параметры.ЗначенияСубконто.Вставить("ВидыЗатрат",Параметры.СубконтоВидыЗатрат);</ПослеЗагрузкиПравилОбмена>
	<Параметры>
		<Параметр Имя="ЗначенияСубконто                                  " Наименование="ЗначенияСубконто                                  " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="КонецПериода                                      " Наименование="КонецПериода                                      " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="НачалоПериода                                     " Наименование="НачалоПериода                                     " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ПараметрыАлгоритмов                               " Наименование="ПараметрыАлгоритмов                               " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СубконтоБСО                                       " Наименование="СубконтоБСО                                       " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="СправочникСсылка.БСО" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СубконтоВидыЗатрат                                " Наименование="СубконтоВидыЗатрат                                " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="СправочникСсылка.ВидыЗатрат" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СубконтоИзвещения                                 " Наименование="СубконтоИзвещения                                 " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СубконтоКонтрагенты                               " Наименование="СубконтоКонтрагенты                               " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="СправочникСсылка.Контрагенты" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СубконтоНоменклатура                              " Наименование="СубконтоНоменклатура                              " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="СправочникСсылка.Номенклатура" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СубконтоОС                                        " Наименование="СубконтоОС                                        " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="СправочникСсылка.ОсновныеСредства" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СубконтоСтатусыПоставки                           " Наименование="СубконтоСтатусыПоставки                           " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="ПеречислениеСсылка.СтатусыПоставкиЦентрализованногоСнабжения" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СубконтоЦМО                                       " Наименование="СубконтоЦМО                                       " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="СправочникСсылка.ЦМО" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаПроводок                                   " Наименование="ТаблицаПроводок                                   " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
	</Параметры>
	<Обработки/>
	<ПравилаКонвертацииОбъектов>
		<Группа>
			<Код>Планы счетов</Код>
			<Наименование>Планы счетов</Наименование>
			<Порядок>50</Порядок>
			<Правило>
				<Код>ЕПСБУ</Код>
				<Наименование>План счетов: Счета ЕПСБУ</Наименование>
				<Порядок>50</Порядок>
				<Источник>ПланСчетовСсылка.ЕПСБУ</Источник>
				<Приемник>ПланСчетовСсылка.ЕПСБУ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОперацияБух</Код>
				<Наименование>: </Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>Проводки = ВходящиеДанные.ЖурналПроводокЕПСБУ;
Если Проводки.Количество() = 0 Тогда
	Отказ = Истина;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>	
	Объект.Организация = Справочники.Организации.найтиПоКоду("F00006633");
	Проводки = Объект.Движения.ЖурналПроводокЕПСБУ;
	Для Каждого Проводка ИЗ Проводки Цикл
		//Дт
			ВидыСубконто = Проводка.СчетДт.ВидыСубконто;
			Для Каждого Стр Из ВидыСубконто Цикл
				Зн = Неопределено;
				Если Стр.ВидСубконто.Наименование = "Контрагенты" Тогда
					мСпр = Справочники.Контрагенты.НайтиПоНаименованию("Все_Контрагенты");
					Если Не ЗначениеЗаполнено(мСпр) Тогда
						мЭлемент = Справочники.Контрагенты.СоздатьЭлемент();
						мЭлемент.Наименование = "Все_Контрагенты";                                   
						мЭлемент.ОбменДанными.Загрузка = Истина;
						мЭлемент.Записать();
						мСпр = мЭлемент.Ссылка;
					КонецЕсли;
					Зн = мСпр.Ссылка; 						
				ИначеЕсли Стр.ВидСубконто.Наименование = "Договоры Мероприятия" Тогда
					Зн = Справочники.Мероприятия.НайтиПоНаименованию("304 14");					
				ИначеЕсли Стр.ВидСубконто.Наименование = "Корреспонденты по внутренним расчетам" Тогда
	                Зн = Справочники.Организации.НайтиПоКоду("F00006633");
				ИначеЕсли Стр.ВидСубконто.Наименование = "ВидыНФА" Тогда
					Зн = Перечисления.ВидыНФА.ПустаяСсылка();
				ИначеЕсли Стр.ВидСубконто.Наименование = "Основные средства" Тогда
					//Сообщить(Строка(Проводка.СчетДт));
					//Сообщить(Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.34")));
					//Сообщить(Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.34").Код)));
					Если Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.34").Код))
						или Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.34").Код))тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10134");	
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.36").Код))
						или Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.36").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10136");						
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.11").Код))
						или Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.11").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10111");	
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.12").Код))
						или Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.12").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10112");
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.15").Код))
						или Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.15").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10115");
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.32").Код))
						или Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.32").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10132");
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.35").Код))
						или Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.35").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10135");
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.37").Код))
						или Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.37").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10137");
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.38").Код))
						или Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.38").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10138");
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.39").Код)) тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10139");
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("21.32").Код)) тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС21");
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("21.34").Код)) тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС21");
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("21.35").Код)) тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС21");
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("21.36").Код)) тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС21");	
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("21.38").Код)) тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС21");
					ИначеЕсли Строка(Строка(Проводка.СчетДт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("103.11").Код)) тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС103");
					Иначе						
						мСпр = Справочники.ОсновныеСредства.НайтиПоНаименованию("Все_ОсновныеСредства");//_"+Объект.Организация.КодПоРПБС);	
					КонецЕсли;	
					
					Если Не ЗначениеЗаполнено(мСпр) Тогда
						мЭлемент = Справочники.ОсновныеСредства.СоздатьЭлемент();
						мЭлемент.Наименование = "Все_ОсновныеСредства";//_"+Объект.Организация.КодПоРПБС;
						мЭлемент.Организация = Объект.Организация;
						мЭлемент.ОбменДанными.Загрузка = Истина;
						мЭлемент.Записать();
						мСпр = мЭлемент.Ссылка;
					КонецЕсли;
						Зн = мСпр.Ссылка;	
				ИначеЕсли Стр.ВидСубконто.Наименование = "Номенклатура" Тогда
					мСпр = Справочники.Номенклатура.НайтиПоНаименованию("Все_Номенклатура");
					Если Не ЗначениеЗаполнено(мСпр) Тогда
						мЭлемент = Справочники.Номенклатура.СоздатьЭлемент();
						мЭлемент.Наименование = "Все_Номенклатура";
						мЭлемент.ОбменДанными.Загрузка = Истина;
						мЭлемент.Записать();
						мСпр = мЭлемент.Ссылка;
					КонецЕсли;
					Зн = мСпр.Ссылка;
					//мСпр = Справочники.Номенклатура.НайтиПоНаименованию("Вещевое имущество в пользовании");
					//Если Не ЗначениеЗаполнено(мСпр) Тогда
					//	мЭлемент = Справочники.Номенклатура.СоздатьЭлемент();
					//	мЭлемент.Наименование = "Вещевое имущество в пользовании";
					//	мЭлемент.ОбменДанными.Загрузка = Истина;
					//	мЭлемент.Записать();
					//	мСпр = мЭлемент.Ссылка;
					//КонецЕсли;
					//Зн = мСпр.Ссылка;
				//ИначеЕсли Стр.ВидСубконто.Наименование = "Центры материальной ответственности" Тогда
				ИначеЕсли Стр.ВидСубконто.Наименование = "ЦМО" Тогда
					//ФЭСЦМО мСпр = Справочники.ЦМО.НайтиПоНаименованию("Все_ЦМО");//_"+Объект.Организация.КодПоРПБС);
					мСпр = Справочники.ЦМО.НайтиПоНаименованию("ФЭСЦМО");
					Если Не ЗначениеЗаполнено(мСпр) Тогда
						мЭлемент = Справочники.ЦМО.СоздатьЭлемент();
						мЭлемент.Наименование = "Все_ЦМО";//_"+Объект.Организация.КодПоРПБС;
						мЭлемент.Владелец = Объект.Организация;
						мСотрудник = Справочники.Сотрудники.НайтиПоНаименованию("Все_Сотрудники");//_"+Объект.Организация.КодПоРПБС);
						Если Не ЗначениеЗаполнено(мСотрудник) Тогда
							мСк = Справочники.Сотрудники.СоздатьЭлемент();
							мСк.Наименование = "Все_Сотрудники";//_"+Объект.Организация.КодПоРПБС;   
							мСк.ОбменДанными.Загрузка = Истина; 
							мСк.Записать();
						   	мСотрудник = мСк.Ссылка;
						КонецЕсли;
						мЭлемент.Сотрудник = мСотрудник.Ссылка;//получить сотрудника
						
						мЭлемент.ОбменДанными.Загрузка = Истина;
						мЭлемент.Записать();
						мСпр = мЭлемент.Ссылка;
					КонецЕсли;
					Зн = мСпр.Ссылка;
				//ИначеЕсли Стр.ВидСубконто.Наименование = "Бланки строгой отчетности" Тогда
				ИначеЕсли Стр.ВидСубконто.Наименование = "БСО" Тогда				
					мСпр = Справочники.БСО.НайтиПоНаименованию("Все_БСО");
					Если Не ЗначениеЗаполнено(мСпр) Тогда
						мЭлемент = Справочники.БСО.СоздатьЭлемент();
						мЭлемент.Наименование = "Все_БСО";
						мЭлемент.ОбменДанными.Загрузка = Истина;
						мЭлемент.Записать();
						мСпр = мЭлемент.Ссылка;
					КонецЕсли;
					Зн = мСпр.Ссылка;
				ИначеЕсли Стр.ВидСубконто.Наименование = "Статусы поставки" Тогда
					Зн = Перечисления.ЦС_СтатусыПоставки.Принято;	
				КонецЕсли;
				Если ЗначениеЗаполнено(Зн) Тогда
					Проводка.СубконтоДт[Стр.ВидСубконто] = Зн;
				КонецЕсли;
			КонецЦикла;
			
			//Кт
			ВидыСубконто = Проводка.СчетКт.ВидыСубконто;
			Для Каждого Стр Из ВидыСубконто Цикл
				Зн = Неопределено;				
				Если Стр.ВидСубконто.Наименование = "Контрагенты" Тогда
					мСпр = Справочники.Контрагенты.НайтиПоНаименованию("Все_Контрагенты");
					Если Не ЗначениеЗаполнено(мСпр) Тогда
						мЭлемент = Справочники.Контрагенты.СоздатьЭлемент();
						мЭлемент.Наименование = "Все_Контрагенты";                                   
						мЭлемент.ОбменДанными.Загрузка = Истина;
						мЭлемент.Записать();
						мСпр = мЭлемент.Ссылка;
					КонецЕсли; 
					Зн = мСпр.Ссылка;
				ИначеЕсли Стр.ВидСубконто.Наименование = "Договоры Мероприятия" Тогда
					Зн = Справочники.Мероприятия.НайтиПоНаименованию("304 14");
				ИначеЕсли Стр.ВидСубконто.Наименование = "Корреспонденты по внутренним расчетам" Тогда
	                Зн = Справочники.Организации.НайтиПоКоду("F00006633");					
				ИначеЕсли Стр.ВидСубконто.Наименование = "ВидыНФА" Тогда
					Зн = Перечисления.ВидыНФА.ПустаяСсылка();	
				ИначеЕсли Стр.ВидСубконто.Наименование = "Основные средства" Тогда
					
					Если Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.34").Код))
						или Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.34").Код))тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10134");	
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.36").Код))
						или Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.36").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10136");						
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.11").Код))
						или Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.11").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10111");	
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.12").Код))
						или Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.12").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10112");
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.15").Код))
						или Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.15").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10115");
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.32").Код))
						или Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.32").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10132");
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.35").Код))
						или Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.35").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10135");
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.37").Код))
						или Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.37").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10137");
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.38").Код))
						или Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.38").Код)) тогда	
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10138");
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.39").Код)) тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС10139");
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("21.32").Код)) тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС21");
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("21.34").Код)) тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС21");
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("21.35").Код)) тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС21");
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("21.36").Код)) тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС21");	
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("21.38").Код)) тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС21");
					ИначеЕсли Строка(Строка(Проводка.СчетКт) = Строка(ПланыСчетов.ЕПСБУ.НайтиПоКоду("103.11").Код)) тогда
						мСпр = Справочники.ОсновныеСредства.НайтиПоКоду("ФЭС103");
					Иначе						
						мСпр = Справочники.ОсновныеСредства.НайтиПоНаименованию("Все_ОсновныеСредства");//_"+Объект.Организация.КодПоРПБС);	
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(мСпр) Тогда
						мЭлемент = Справочники.ОсновныеСредства.СоздатьЭлемент();
						мЭлемент.Наименование = "Все_ОсновныеСредства";//_"+Объект.Организация.КодПоРПБС;
						мЭлемент.Организация = Объект.Организация;
						мЭлемент.ОбменДанными.Загрузка = Истина;
						мЭлемент.Записать();
						мСпр = мЭлемент.Ссылка;
					КонецЕсли;
					Зн = мСпр.Ссылка;		
				ИначеЕсли Стр.ВидСубконто.Наименование = "Номенклатура" Тогда
					мСпр = Справочники.Номенклатура.НайтиПоНаименованию("Все_Номенклатура");
					Если Не ЗначениеЗаполнено(мСпр) Тогда
						мЭлемент = Справочники.Номенклатура.СоздатьЭлемент();
						мЭлемент.Наименование = "Все_Номенклатура";
						мЭлемент.ОбменДанными.Загрузка = Истина;
						мЭлемент.Записать();
						мСпр = мЭлемент.Ссылка;
					КонецЕсли;
					Зн = мСпр.Ссылка;
				//ИначеЕсли Стр.ВидСубконто.Наименование = "Центры материальной ответственности" Тогда
				ИначеЕсли Стр.ВидСубконто.Наименование = "ЦМО" Тогда
					//мСпр = Справочники.ЦМО.НайтиПоНаименованию("Все_ЦМО");//_"+Объект.Организация.КодПоРПБС);
					мСпр = Справочники.ЦМО.НайтиПоНаименованию("ФЭСЦМО");
					Если Не ЗначениеЗаполнено(мСпр) Тогда
						мЭлемент = Справочники.ЦМО.СоздатьЭлемент();
						мЭлемент.Наименование = "Все_ЦМО";//_"+Объект.Организация.КодПоРПБС;
						мЭлемент.Владелец = Объект.Организация;
						мСотрудник = Справочники.Сотрудники.НайтиПоНаименованию("Все_Сотрудники");//_"+Объект.Организация.КодПоРПБС);
						Если Не ЗначениеЗаполнено(мСотрудник) Тогда
							мСк = Справочники.Сотрудники.СоздатьЭлемент();
							мСк.Наименование = "Все_Сотрудники";//_"+Объект.Организация.КодПоРПБС;   
							мСк.ОбменДанными.Загрузка = Истина; 
							мСк.Записать();
						   	мСотрудник = мСк.Ссылка;
						КонецЕсли;
						мЭлемент.Сотрудник = мСотрудник.Ссылка;//получить сотрудника
						
						мЭлемент.ОбменДанными.Загрузка = Истина;
						мЭлемент.Записать();
						мСпр = мЭлемент.Ссылка;
					КонецЕсли;
					Зн = мСпр.Ссылка;
				//ИначеЕсли Стр.ВидСубконто.Наименование = "Бланки строгой отчетности" Тогда
				ИначеЕсли Стр.ВидСубконто.Наименование = "БСО" Тогда
					мСпр = Справочники.БСО.НайтиПоНаименованию("Все_БСО");
					Если Не ЗначениеЗаполнено(мСпр) Тогда
						мЭлемент = Справочники.БСО.СоздатьЭлемент();
						мЭлемент.Наименование = "Все_БСО";
						мЭлемент.ОбменДанными.Загрузка = Истина;
						мЭлемент.Записать();
						мСпр = мЭлемент.Ссылка;
					КонецЕсли;
					Зн = мСпр.Ссылка;
				ИначеЕсли Стр.ВидСубконто.Наименование = "Статусы поставки" Тогда
					Зн = Перечисления.ЦС_СтатусыПоставки.Принято;	
				КонецЕсли;
				Если ЗначениеЗаполнено(Зн) Тогда
					Проводка.СубконтоКт[Стр.ВидСубконто] = Зн;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.ОперацияБух</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>//Значение = "Обороты за " + ПредставлениеПериода(Параметры.НачалоПериода,Параметры.КонецПериода);

Значение = "Костанов 3.0";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Основание</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Основание" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Учреждение = ВходящиеДанные.Организация;
Счет = ВходящиеДанные.Счет;

Значение = "Обороты по счету: " + Счет + ". Учреждение: " + Учреждение;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; Ответственный</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; СуммаДокумента</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
						<ПередВыгрузкой>Проводки = ВходящиеДанные.ЖурналПроводокЕПСБУ;
Значение = Проводки.Итог("Сумма");</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.КонецПериода</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; ПометкаУдаления</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Группа>
						<Код>8</Код>
						<Наименование>--&gt; ЖурналПроводокЕПСБУ</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЖурналПроводокЕПСБУ" Вид="НаборДвиженийРегистраБухгалтерии"/>
						<Свойство Отключить="true">
							<Код>9</Код>
							<Наименование>--&gt; СубконтоДт</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт" Вид="ВидыСубконтоСчета"/>
							<ПередВыгрузкой>Отказ = НЕ ЗначениеЗаполнено(ОбъектКоллекции.СубконтоДт);
ИмяПКОВидСубконто = "ВидыСубконтоБюджет";</ПередВыгрузкой>
							<ПриВыгрузке>//Сообщить(Строка(КлючИЗначение.Ключ));
//Сообщить(Строка(ТипЗнч(КлючИЗначение.Значение)));
//Сообщить(Строка(КлючИЗначение.Значение));

//Сообщить(Строка(КлючИЗначение.Ключ = "Контрагенты"));
						   	
Если Строка(КлючИЗначение.Ключ) = "Контрагенты" Тогда //ПланыВидовХарактеристик.ВидыСубконто.Контрагенты Тогда //"Контрагенты" Тогда
	//ИмяПКО = "Контрагенты";
КонецЕсли;</ПриВыгрузке>
						</Свойство>
						<Свойство Отключить="true">
							<Код>10</Код>
							<Наименование>--&gt; СубконтоКт</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт" Вид="ВидыСубконтоСчета"/>
							<ПередВыгрузкой>Отказ = НЕ ЗначениеЗаполнено(ОбъектКоллекции.СубконтоКт);
ИмяПКОВидСубконто = "ВидыСубконтоБюджет";</ПередВыгрузкой>
							<ПриВыгрузке>//Сообщить(Строка(КлючИЗначение.Ключ));
//Сообщить(Строка(ТипЗнч(КлючИЗначение.Значение)));

//Сообщить(Строка(КлючИЗначение.Ключ = "Контрагенты"));

Если КлючИЗначение.Ключ = "Контрагенты" Тогда //ПланыВидовХарактеристик.ВидыСубконто.Контрагенты Тогда //"Контрагенты" Тогда
//	ИмяПКО = "Контрагенты";
КонецЕсли;</ПриВыгрузке>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; ВалютаДт</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДт" Вид="Измерение" Тип="СправочникСсылка.Валюты"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; ВалютаКт</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаКт" Вид="Измерение" Тип="СправочникСсылка.Валюты"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Отключить="true">
							<Код>14</Код>
							<Наименование>--&gt; Содержание</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ВалютнаяСуммаДт</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСуммаДт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ВалютнаяСуммаКт</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСуммаКт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; КоличествоДт</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоДт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; КоличествоКт</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоКт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>20</Код>
							<Наименование>--&gt; Дата</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.КонецПериода;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; СчетДт</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетДт" Вид="Свойство" Тип="ПланСчетовСсылка.ЕПСБУ"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; СчетКт</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКт" Вид="Свойство" Тип="ПланСчетовСсылка.ЕПСБУ"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; КФО</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КФО" Вид="Измерение" Тип="ПеречислениеСсылка.КВД"/>
							<КодПравилаКонвертации>КВД                                               </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; ИФО</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИФО" Вид="Измерение" Тип="СправочникСсылка.ИсточникиФинансовогоОбеспечения"/>
							<КодПравилаКонвертации>ИсточникиФинансовогоОбеспечения                   </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ВходящиеДанные.ИФО;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; КПСДт</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КПСДт" Вид="Измерение" Тип="СправочникСсылка.КлассификационныеПризнакиСчетов"/>
							<КодПравилаКонвертации>КлассификационныеПризнакиСчетов                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; КПСКт</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КПСКт" Вид="Измерение" Тип="СправочникСсылка.КлассификационныеПризнакиСчетов"/>
							<КодПравилаКонвертации>КлассификационныеПризнакиСчетов                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.КонецПериода;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>--&gt; КЭКДт</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КЭКДт" Вид="Измерение" Тип="СправочникСсылка.КОСГУ"/>
							<КодПравилаКонвертации>КОСГУ                                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; КЭККт</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КЭККт" Вид="Измерение" Тип="СправочникСсылка.КОСГУ"/>
							<КодПравилаКонвертации>КОСГУ                                             </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>30</Код>
						<Наименование>--&gt; ИФО</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИФО" Вид="Реквизит" Тип="СправочникСсылка.ИсточникиФинансовогоОбеспечения"/>
						<КодПравилаКонвертации>ИсточникиФинансовогоОбеспечения                   </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОперацияБух00001</Код>
				<Наименование>: </Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>Проводки = ВходящиеДанные.ЖурналПроводокЕПСБУ;
Если Проводки.Количество() = 0 Тогда
	Отказ = Истина;
КонецЕсли;</ПередВыгрузкой>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Приемник>ДокументСсылка.ОперацияБух</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>//Значение = "Обороты за " + ПредставлениеПериода(Параметры.НачалоПериода,Параметры.КонецПериода);
Значение = "Костанов";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Основание</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Основание" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>//Учреждение = ВходящиеДанные.Учреждение;
//Счет = ВходящиеДанные.Счет;

//Значение = "Обороты по счету: " + Счет + ". Учреждение: " + Учреждение;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; Ответственный</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; СуммаДокумента</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
						<ПередВыгрузкой>Проводки = ВходящиеДанные.ЖурналПроводокЕПСБУ;
Значение = Проводки.Итог("Сумма");</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.КонецПериода</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; ПометкаУдаления</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Группа>
						<Код>8</Код>
						<Наименование>--&gt; ЖурналПроводокЕПСБУ</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЖурналПроводокЕПСБУ" Вид="НаборДвиженийРегистраБухгалтерии"/>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; СубконтоДт</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт" Вид="ВидыСубконтоСчета"/>
							<ПередВыгрузкой>Отказ = НЕ ЗначениеЗаполнено(ОбъектКоллекции.СубконтоДт);
ИмяПКОВидСубконто = "ВидыСубконтоБюджет";</ПередВыгрузкой>
							<ПриВыгрузке>//Сообщить(Строка(ТипЗнч(КлючИЗначение.Ключ)));
//Сообщить(Строка(ТипЗнч(КлючИЗначение.Значение)));

Если КлючИЗначение.Ключ = "Контрагент" Тогда//ПланыВидовХарактеристик.ВидыСубконто.Контрагенты Тогда //"Контрагенты" Тогда
	ИмяПКО = "Контрагенты";
КонецЕсли;</ПриВыгрузке>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; СубконтоКт</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт" Вид="ВидыСубконтоСчета"/>
							<ПередВыгрузкой>Отказ = НЕ ЗначениеЗаполнено(ОбъектКоллекции.СубконтоКт);
ИмяПКОВидСубконто = "ВидыСубконтоБюджет";</ПередВыгрузкой>
							<ПриВыгрузке>Если КлючИЗначение.Ключ = "Контрагенты" Тогда
	ИмяПКО = "Контрагенты";
КонецЕсли;</ПриВыгрузке>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; ВалютаДт</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДт" Вид="Измерение" Тип="СправочникСсылка.Валюты"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; ВалютаКт</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаКт" Вид="Измерение" Тип="СправочникСсылка.Валюты"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОперацияБух                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Отключить="true">
							<Код>14</Код>
							<Наименование>--&gt; Содержание</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ВалютнаяСуммаДт</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСуммаДт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ВалютнаяСуммаКт</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСуммаКт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; КоличествоДт</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоДт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; КоличествоКт</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоКт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>20</Код>
							<Наименование>--&gt; Дата</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.КонецПериода;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; СчетДт</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетДт" Вид="Свойство" Тип="ПланСчетовСсылка.ЕПСБУ"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; СчетКт</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКт" Вид="Свойство" Тип="ПланСчетовСсылка.ЕПСБУ"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; КФО</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КФО" Вид="Измерение" Тип="ПеречислениеСсылка.КВД"/>
							<КодПравилаКонвертации>ОперацияБух                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; ИФО</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИФО" Вид="Измерение" Тип="СправочникСсылка.ИсточникиФинансовогоОбеспечения"/>
							<КодПравилаКонвертации>ОперацияБух                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; КПСДт</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КПСДт" Вид="Измерение" Тип="СправочникСсылка.КлассификационныеПризнакиСчетов"/>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; КПСКт</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КПСКт" Вид="Измерение" Тип="СправочникСсылка.КлассификационныеПризнакиСчетов"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.КонецПериода;</ПередВыгрузкой>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыСубконтоБюджет</Код>
				<Наименование>План видов характеристик: Виды субконто</Наименование>
				<Порядок>150</Порядок>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Источник>ПланВидовХарактеристикСсылка.ВидыСубконто</Источник>
				<Приемник>ПланВидовХарактеристикСсылка.ВидыСубконто</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Контрагенты</Код>
				<Наименование>Справочник: Контрагенты</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>Сообщить(Источник);</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>СправочникСсылка.Контрагенты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>ИНН --&gt; ИНН</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>100</Порядок>
			<Правило>
				<Код>Организации</Код>
				<Наименование>: </Наименование>
				<Порядок>50</Порядок>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Источник>СправочникСсылка.Организации</Источник>
				<Приемник>СправочникСсылка.Организации</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>ИНН --&gt; ИНН</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ИсточникиФинансовогоОбеспечения</Код>
				<Наименование>: </Наименование>
				<Порядок>100</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.Организации</Источник>
				<Приемник>СправочникСсылка.ИсточникиФинансовогоОбеспечения</Приемник>
				<Свойства>
					<Свойство Отключить="true" Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>КодПоРПБС --&gt; РЕШ_КодПоРПБС</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="КодПоРПБС" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="РЕШ_КодПоРПБС" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КлассификационныеПризнакиСчетов</Код>
				<Наименование>Справочник: Классификационные признаки счетов</Наименование>
				<Порядок>150</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.КлассификационныеПризнакиСчетов</Источник>
				<Приемник>СправочникСсылка.КлассификационныеПризнакиСчетов</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КОСГУ</Код>
				<Наименование>Справочник: КЭК</Наименование>
				<Порядок>250</Порядок>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Источник>СправочникСсылка.КОСГУ</Источник>
				<Приемник>СправочникСсылка.КОСГУ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>НаименованиеПолное --&gt; НаименованиеПолное</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Отключить="true">
						<Код>2</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.КОСГУ"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.КОСГУ"/>
						<КодПравилаКонвертации>КОСГУ                                             </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Перечисления</Код>
			<Наименование>Перечисления</Наименование>
			<Порядок>150</Порядок>
			<Правило>
				<Код>КВД</Код>
				<Наименование>: </Наименование>
				<Порядок>50</Порядок>
				<Источник>ПеречислениеСсылка.КВД</Источник>
				<Приемник>ПеречислениеСсылка.КВД</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Бюджет --&gt; Бюджет</Наименование>
						<Порядок>50</Порядок>
						<Источник>Бюджет</Источник>
						<Приемник>Бюджет</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>БюджетныеИнвестиции --&gt; БюджетныеИнвестиции</Наименование>
						<Порядок>100</Порядок>
						<Источник>БюджетныеИнвестиции</Источник>
						<Приемник>БюджетныеИнвестиции</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Внебюджет --&gt; Внебюджет</Наименование>
						<Порядок>150</Порядок>
						<Источник>Внебюджет</Источник>
						<Приемник>Внебюджет</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ВременноеРаспоряжение --&gt; ВременноеРаспоряжение</Наименование>
						<Порядок>200</Порядок>
						<Источник>ВременноеРаспоряжение</Источник>
						<Приемник>ВременноеРаспоряжение</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>СредстваОМС --&gt; СредстваОМС</Наименование>
						<Порядок>250</Порядок>
						<Источник>СредстваОМС</Источник>
						<Приемник>СредстваОМС</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>СубсидииНаГосзадание --&gt; СубсидииНаГосзадание</Наименование>
						<Порядок>300</Порядок>
						<Источник>СубсидииНаГосзадание</Источник>
						<Приемник>СубсидииНаГосзадание</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>СубсидииНаИныеЦели --&gt; СубсидииНаИныеЦели</Наименование>
						<Порядок>350</Порядок>
						<Источник>СубсидииНаИныеЦели</Источник>
						<Приемник>СубсидииНаИныеЦели</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
	</ПравилаКонвертацииОбъектов>
	<ПравилаВыгрузкиДанных>
		<Группа Отключить="true">
			<Код>Забаланс</Код>
			<Наименование>Забаланс</Наименование>
			<Порядок>50</Порядок>
			<Правило Отключить="true">
				<Код>сч01_11</Код>
				<Наименование>сч01_11                                           </Наименование>
				<Порядок>50</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("01.11"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч01_31</Код>
				<Наименование>сч01_31                                           </Наименование>
				<Порядок>100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("01.31"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч02_1</Код>
				<Наименование>сч02_1                                            </Наименование>
				<Порядок>150</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("02.1"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч02_2</Код>
				<Наименование>сч02_2                                            </Наименование>
				<Порядок>200</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("02.2"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч03_1</Код>
				<Наименование>сч03_1                                            </Наименование>
				<Порядок>250</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("03.1"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч05_1</Код>
				<Наименование>сч05_1                                            </Наименование>
				<Порядок>300</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("05.1"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч05_2</Код>
				<Наименование>сч05_2                                            </Наименование>
				<Порядок>350</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("05.2"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч07_1</Код>
				<Наименование>сч07_1                                            </Наименование>
				<Порядок>400</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("07.1"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч07_2</Код>
				<Наименование>сч07_2                                            </Наименование>
				<Порядок>450</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("07.2"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч09</Код>
				<Наименование>сч09                                              </Наименование>
				<Порядок>500</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("09"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч21</Код>
				<Наименование>сч21                                              </Наименование>
				<Порядок>550</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("21"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч22_1</Код>
				<Наименование>сч22_1                                            </Наименование>
				<Порядок>600</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("22.1"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч22_2</Код>
				<Наименование>сч22_2                                            </Наименование>
				<Порядок>650</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("22.2"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч26_11</Код>
				<Наименование>сч26_11                                           </Наименование>
				<Порядок>700</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("26.11"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч26_31</Код>
				<Наименование>сч26_31                                           </Наименование>
				<Порядок>750</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("26.31"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч26_34</Код>
				<Наименование>сч26_34                                           </Наименование>
				<Порядок>800</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("26.34"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч27</Код>
				<Наименование>сч27                                              </Наименование>
				<Порядок>850</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоНаименованию("Материальные ценности, выданные в личное пользование работникам (сотрудникам)"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчету);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
		</Группа>
		<Группа Отключить="true">
			<Код>Баланс</Код>
			<Наименование>Баланс</Наименование>
			<Порядок>100</Порядок>
			<Правило Отключить="true">
				<Код>сч101</Код>
				<Наименование>сч101                                             </Наименование>
				<Порядок>50</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.00"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчетуБаланс);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч104</Код>
				<Наименование>сч104                                             </Наименование>
				<Порядок>100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.00"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчетуБаланс);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч105</Код>
				<Наименование>сч105                                             </Наименование>
				<Порядок>150</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("105.00"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчетуБаланс);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч106_31</Код>
				<Наименование>сч106_31                                          </Наименование>
				<Порядок>200</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("106.31"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчетуБаланс);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>сч106_34</Код>
				<Наименование>сч106_34                                          </Наименование>
				<Порядок>250</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Вставить("ТекущийСчет", ПланыСчетов.ЕПСБУ.НайтиПоКоду("106.34"));
Выборка = Справочники.Организации.Выбрать();
Пока Выборка.Следующий() Цикл
	Параметры.ПараметрыАлгоритмов.Вставить("Учреждение", Выборка.Ссылка);
	Выполнить(Алгоритмы.ВыгрузитьОборотыПоСчетуБаланс);
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
		</Группа>
	</ПравилаВыгрузкиДанных>
	<ПравилаОчисткиДанных/>
	<Алгоритмы>
		<Алгоритм Имя="ВыгрузитьОборотыПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>Счет = Параметры.ПараметрыАлгоритмов.ТекущийСчет;
Учреждение = Параметры.ПараметрыАлгоритмов.Учреждение;
Проводки = Параметры.ТаблицаПроводок;
Проводки.Очистить();

ЗначенияСубконто = Новый Соответствие;

Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("03.1") Тогда
	ЗначенияСубконто.Вставить("БСО",Параметры.ЗначенияСубконто.Получить("БСО"));
КонецЕсли;

Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("05.1") 
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("05.2")
	Тогда
	ЗначенияСубконто.Вставить("Извещения",Параметры.ЗначенияСубконто.Получить("Извещения"));
КонецЕсли;

Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("01.11")
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("01.31") 
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("02.1") 
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("02.2")
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("05.1")
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("05.5")
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("22.1")
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("22.2")
	//KAV ++
	//Или Счет = ПланыСчетов.ЕПСБУ.ОСПереданныеВБПНедвижимое
	//Или Счет = ПланыСчетов.ЕПСБУ.ОСПереданныеВБПИДИ
	//Или Счет = ПланыСчетов.ЕПСБУ.МЗПереданныеВБПИДИ
	//KAV --
	Тогда
	ЗначенияСубконто.Вставить("Контрагенты",Параметры.ЗначенияСубконто.Получить("Контрагенты"));
КонецЕсли;

Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("02.2") //МЗНаХранении
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("05.2") //МЗОплаченныеПоЦС
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("07.1") //УЕПереходящиеНаградыЦенныеПодарки
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("07.2") //ПереходящиеНаградыЦенныеПодаркиПоСтоимости
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("09") //ЗапчастиКТранспорту
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("22.2") //МЗПолученныеПоЦС
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("26.34") //МЗПереданныеВБПИДИ
	Тогда
	ЗначенияСубконто.Вставить("Номенклатура",Параметры.ЗначенияСубконто.Получить("Номенклатура"));
КонецЕсли;

Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("05.1") //ОСОплаченныеПоЦС
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("05.2") //МЗОплаченныеПоЦС
	Тогда
	ЗначенияСубконто.Вставить("СтатусыПоставки",Параметры.ЗначенияСубконто.Получить("СтатусыПоставки"));
КонецЕсли;

Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("01.11") //ИмуществоВБезвозмездномПользованииНедвижимое 
	или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("01.31") //ИмуществоВБезвозмездномПользованииДвижимоеИное
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("02.1") //ОСНаХранении
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("05.1") //ОСОплаченныеПоЦС
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("09") //ЗапчастиКТранспорту
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("21") //ОСдо3000рублейВЭксплуатации
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("22.1") //ОСПолученныеПоЦС
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("26.11") //ОСПереданныеВБПНедвижимое
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("26.31") //ОСПереданныеВБПИДИ
	Тогда
	ЗначенияСубконто.Вставить("ОсновныеСредства",Параметры.ЗначенияСубконто.Получить("ОсновныеСредства"));
КонецЕсли;

Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("01.11") //ИмуществоВБезвозмездномПользованииНедвижимое
	или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("01.31") //ИмуществоВБезвозмездномПользованииДвижимоеИное
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("02.1") //ОСНаХранении
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("02.2") //МЗНаХранении
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("03.1") //БСОвУслЕд
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("07.1") //УЕПереходящиеНаградыЦенныеПодарки
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("07.2") //ПереходящиеНаградыЦенныеПодаркиПоСтоимости
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("09") //ЗапчастиКТранспорту
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("21") //ОСдо3000рублейВЭксплуатации
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("22.1") //ОСПолученныеПоЦС
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("22.2") //МЗПолученныеПоЦС
	Тогда
	ЗначенияСубконто.Вставить("ЦМО",Параметры.ЗначенияСубконто.Получить("ЦМО"));
КонецЕсли;
	
СубДТ = ЗначенияСубконто;
СубКТ = ЗначенияСубконто;

Запросы.ДвиженияПоСчету.УстановитьПараметр("НачДата",Параметры.НачалоПериода);
Запросы.ДвиженияПоСчету.УстановитьПараметр("КонДата",Параметры.КонецПериода);
Запросы.ДвиженияПоСчету.УстановитьПараметр("Счет",Счет);
Запросы.ДвиженияПоСчету.УстановитьПараметр("Учреждение",Учреждение);

//KAV ++
Запросы.ДвиженияПоСчетам26.УстановитьПараметр("НачДата",Параметры.НачалоПериода);
Запросы.ДвиженияПоСчетам26.УстановитьПараметр("КонДата",Параметры.КонецПериода);
Запросы.ДвиженияПоСчетам26.УстановитьПараметр("Счет",Счет);
Запросы.ДвиженияПоСчетам26.УстановитьПараметр("Учреждение",Учреждение);

Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("26.11") //ОСПереданныеВБПНедвижимое
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("26.31") //ОСПереданныеВБПИДИ
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("26.34") //МЗПереданныеВБПИДИ
	Тогда
	Рез = Запросы.ДвиженияПоСчетам26.Выполнить().Выгрузить();	
Иначе	
	Рез = Запросы.ДвиженияПоСчету.Выполнить().Выгрузить();
КонецЕсли;

//KAV --
Для Каждого стрРез из Рез Цикл
	Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("26.11") //ОСПереданныеВБПНедвижимое
		Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("26.31") //ОСПереданныеВБПИДИ
		Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("26.34") //МЗПереданныеВБПИДИ
		Тогда
		
		СубконтоДТНовое = Новый Соответствие;
		СубконтоДТНовое.Вставить("ОсновныеСредства",Параметры.ЗначенияСубконто.Получить("ОсновныеСредства"));
		
		СубконтоКТНовое = Новый Соответствие;
		СубконтоКТНовое.Вставить("ОсновныеСредства",Параметры.ЗначенияСубконто.Получить("ОсновныеСредства"));
		
		НС = Проводки.Добавить(); 
		ЗаполнитьЗначенияСвойств(НС,стрРез);		
		Если ЗначениеЗаполнено(НС.СчетДт) Тогда
			НС.СубконтоДт = СубконтоДТНовое;
			НС.СубконтоДт.Вставить(ПланыВидовХарактеристик.ВидыСубконто.Контрагенты, стрРез.СубконтоДт);
		Иначе
			НС.СубконтоДт = Неопределено;
		КонецЕсли;
		Если ЗначениеЗаполнено(НС.СчетКт) Тогда
			НС.СубконтоКт = СубконтоКТНовое;
			НС.СубконтоКт.Вставить(ПланыВидовХарактеристик.ВидыСубконто.Контрагенты, стрРез.СубконтоКт);
		Иначе
			НС.СубконтоКт = Неопределено;
		КонецЕсли;
	Иначе
		НС = Проводки.Добавить();   		
		ЗаполнитьЗначенияСвойств(НС,стрРез);
		Если ЗначениеЗаполнено(НС.СчетДт) Тогда
			НС.СубконтоДт = СубДТ;
		Иначе
			НС.СубконтоДт = Неопределено;
		КонецЕсли;
		Если ЗначениеЗаполнено(НС.СчетКт) Тогда
			НС.СубконтоКт = СубКТ;
		Иначе
			НС.СубконтоКт = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецЦикла;

Если Проводки.Количество()&gt;0 тогда
	ВходящиеДанные = Новый Структура;
	ВходящиеДанные.Вставить("Счет", Счет);
	ВходящиеДанные.Вставить("ЖурналПроводокЕПСБУ", Проводки);
	ВходящиеДанные.Вставить("Организация",Учреждение);
	ВходящиеДанные.Вставить("ИФО",Учреждение);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОборотыПоСчетуБаланс" ИспользуетсяПриЗагрузке="false">
			<Текст>Счет = Параметры.ПараметрыАлгоритмов.ТекущийСчет;
Учреждение = Параметры.ПараметрыАлгоритмов.Учреждение;
Проводки = Параметры.ТаблицаПроводок;
Проводки.Очистить();

ЗначенияСубконто = Новый Соответствие;

Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("105.00") //МЗ
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("106.34") //Вложения в МЗ
	Тогда
	ЗначенияСубконто.Вставить("Номенклатура",Параметры.ЗначенияСубконто.Получить("Номенклатура"));
КонецЕсли;

Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("106.31") //Вложения в ОС	
	Тогда
	ЗначенияСубконто.Вставить("ВидыЗатрат",Параметры.ЗначенияСубконто.Получить("ВидыЗатрат"));
КонецЕсли;

Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.00") //ОС 
	или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.00") //Амортизация
	Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("106.31") //Вложения в ОС
	Тогда
	ЗначенияСубконто.Вставить("ОсновныеСредства",Параметры.ЗначенияСубконто.Получить("ОсновныеСредства"));
КонецЕсли;

Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.00") //ОС
	или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("105.00") //МЗ
	Тогда
	ЗначенияСубконто.Вставить("ЦМО",Параметры.ЗначенияСубконто.Получить("ЦМО"));
КонецЕсли;

СубДТ = ЗначенияСубконто;
СубКТ = ЗначенияСубконто;

Запросы.МЗ_105.УстановитьПараметр("НачалоПериода",Параметры.НачалоПериода);
Запросы.МЗ_105.УстановитьПараметр("КонецПериода",Параметры.КонецПериода);
Запросы.МЗ_105.УстановитьПараметр("Счет",Счет);
Запросы.МЗ_105.УстановитьПараметр("Организация",Учреждение);

Запросы.ВложенияВИДИ_106_31_34.УстановитьПараметр("НачалоПериода",Параметры.НачалоПериода);
Запросы.ВложенияВИДИ_106_31_34.УстановитьПараметр("КонецПериода",Параметры.КонецПериода);
Запросы.ВложенияВИДИ_106_31_34.УстановитьПараметр("Счет",Счет);
Запросы.ВложенияВИДИ_106_31_34.УстановитьПараметр("Организация",Учреждение);

Запросы.Амортизация_104_101.УстановитьПараметр("НачалоПериода",Параметры.НачалоПериода);
Запросы.Амортизация_104_101.УстановитьПараметр("КонецПериода",Параметры.КонецПериода);
Запросы.Амортизация_104_101.УстановитьПараметр("Счет",Счет);
Запросы.Амортизация_104_101.УстановитьПараметр("Счет2",ПланыСчетов.ЕПСБУ.НайтиПоКоду("101"));
Запросы.Амортизация_104_101.УстановитьПараметр("Организация",Учреждение);

Запросы.ОС_101_106.УстановитьПараметр("НачалоПериода",Параметры.НачалоПериода);
Запросы.ОС_101_106.УстановитьПараметр("КонецПериода",Параметры.КонецПериода);
Запросы.ОС_101_106.УстановитьПараметр("Счет",Счет);
Запросы.ОС_101_106.УстановитьПараметр("Счет106",ПланыСчетов.ЕПСБУ.НайтиПоКоду("106"));
Запросы.ОС_101_106.УстановитьПараметр("Организация",Учреждение);


Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("106.31") Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("106.34") Тогда
	Рез = Запросы.ВложенияВИДИ_106_31_34.Выполнить().Выгрузить();	
ИначеЕсли Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.00") Тогда	
	Рез = Запросы.ОС_101_106.Выполнить().Выгрузить();
ИначеЕсли Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.00") Тогда	
	Рез = Запросы.Амортизация_104_101.Выполнить().Выгрузить();	
ИначеЕсли Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("105.00") Тогда	
	Рез = Запросы.МЗ_105.Выполнить().Выгрузить();	
КонецЕсли;

Для Каждого стрРез из Рез Цикл
	Если Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("101.00") 
		//Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("104.00") 
		Или Счет = ПланыСчетов.ЕПСБУ.НайтиПоКоду("106.31") 
		Тогда
		
		СубконтоДТНовое = Новый Соответствие;
		СубконтоДТНовое.Вставить("ОсновныеСредства",Параметры.ЗначенияСубконто.Получить("ОсновныеСредства"));
		
		СубконтоКТНовое = Новый Соответствие;
		СубконтоКТНовое.Вставить("ОсновныеСредства",Параметры.ЗначенияСубконто.Получить("ОсновныеСредства"));
		
		НС = Проводки.Добавить(); 
		ЗаполнитьЗначенияСвойств(НС,стрРез);
		Если ЗначениеЗаполнено(НС.СчетДт) Тогда
			НС.СубконтоДт = СубконтоДТНовое;
			НС.СубконтоДт.Вставить(ПланыВидовХарактеристик.ВидыСубконто.Контрагенты, стрРез.СубконтоДт);
		Иначе
			НС.СубконтоДт = Неопределено;
		КонецЕсли;
		Если ЗначениеЗаполнено(НС.СчетКт) Тогда
			НС.СубконтоКт = СубконтоКТНовое;
			НС.СубконтоКт.Вставить(ПланыВидовХарактеристик.ВидыСубконто.Контрагенты, стрРез.СубконтоКт);
		Иначе
			НС.СубконтоКт = Неопределено;
		КонецЕсли; 
	Иначе
		НС = Проводки.Добавить();   		
		ЗаполнитьЗначенияСвойств(НС,стрРез);
		Если ЗначениеЗаполнено(НС.СчетДт) Тогда
			НС.СубконтоДт = СубДТ;
		Иначе
			НС.СубконтоДт = Неопределено;
		КонецЕсли;
		Если ЗначениеЗаполнено(НС.СчетКт) Тогда
			НС.СубконтоКт = СубКТ;
		Иначе
			НС.СубконтоКт = Неопределено;
		КонецЕсли; 
	КонецЕсли;
КонецЦикла;

Если Проводки.Количество()&gt;0 тогда
	ВходящиеДанные = Новый Структура;
	ВходящиеДанные.Вставить("Счет", Счет);
	ВходящиеДанные.Вставить("ЖурналПроводокЕПСБУ", Проводки);
	ВходящиеДанные.Вставить("Организация",Учреждение);
	ВходящиеДанные.Вставить("ИФО",Учреждение);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
КонецЕсли;</Текст>
		</Алгоритм>
	</Алгоритмы>
	<Запросы>
		<Запрос Имя="Амортизация_104_101" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ЕПСБУОборотыДтКт.Организация КАК Организация,
	ЕПСБУОборотыДтКт.КФО КАК КФО,
	ЕПСБУОборотыДтКт.СчетДт КАК СчетДт,
	ЕПСБУОборотыДтКт.КПСДт КАК КПСДт,
	ЕПСБУОборотыДтКт.СубконтоДт1 КАК СубконтоДт,
	ЕПСБУОборотыДтКт.СчетКт КАК СчетКт,
	ЕПСБУОборотыДтКт.КПСКт КАК КПСКт,
	ЕПСБУОборотыДтКт.СубконтоКт1 КАК СубконтоКт,
	СУММА(ЕПСБУОборотыДтКт.СуммаОборот) КАК Сумма,
	СУММА(0) КАК СуммаОборотКт,
	ЕПСБУОборотыДтКт.Организация КАК ИФО,
	ЕПСБУОборотыДтКт.КЭКДт КАК КЭКДт,
	ЕПСБУОборотыДтКт.КЭККт КАК КЭККт
ИЗ
	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.ОборотыДтКт(&amp;НачалоПериода, &amp;КонецПериода, Регистратор, СчетДт В ИЕРАРХИИ (&amp;счет), , , , Организация = &amp;Организация) КАК ЕПСБУОборотыДтКт

СГРУППИРОВАТЬ ПО
	ЕПСБУОборотыДтКт.СчетДт,
	ЕПСБУОборотыДтКт.Организация,
	ЕПСБУОборотыДтКт.КФО,
	ЕПСБУОборотыДтКт.КПСДт,
	ЕПСБУОборотыДтКт.СубконтоДт1,
	ЕПСБУОборотыДтКт.СчетКт,
	ЕПСБУОборотыДтКт.КПСКт,
	ЕПСБУОборотыДтКт.СубконтоКт1,
	ЕПСБУОборотыДтКт.КЭКДт,
	ЕПСБУОборотыДтКт.КЭККт,
	ЕПСБУОборотыДтКт.Организация</Текст>
		</Запрос>
		<Запрос Имя="ВложенияВИДИ_106_31_34" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ЕПСБУОборотыДтКт.Организация КАК Организация,
	ЕПСБУОборотыДтКт.Организация КАК ИФО,
	ЕПСБУОборотыДтКт.КФО КАК КФО,
	ЕПСБУОборотыДтКт.СчетДт КАК Счет,
	ЕПСБУОборотыДтКт.КПСДт КАК КПСДт,
	ЕПСБУОборотыДтКт.СубконтоДт1 КАК СубконтоДт,
	ЕПСБУОборотыДтКт.СчетКт КАК КорСчет,
	ЕПСБУОборотыДтКт.КПСКт КАК КПСКт,
	ЕПСБУОборотыДтКт.СубконтоКт1 КАК СубконтоКт,
	СУММА(ЕПСБУОборотыДтКт.СуммаОборот) КАК Сумма,
	СУММА(0) КАК СуммаОборотКт,
	ВЫБОР
		КОГДА ЕПСБУОборотыДтКт.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
			ТОГДА ЕПСБУОборотыДтКт.СубконтоДт2
		ИНАЧЕ 0
	КОНЕЦ КАК Субконто2,
	ВЫБОР
		КОГДА ЕПСБУОборотыДтКт.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
			ТОГДА ЕПСБУОборотыДтКт.СубконтоКт2
		ИНАЧЕ 0
	КОНЕЦ КАК КорСубконто2
ИЗ
	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.ОборотыДтКт(&amp;НачалоПериода, &amp;КонецПериода, Регистратор, СчетДт В ИЕРАРХИИ (&amp;счет), , , , Организация = &amp;Организация) КАК ЕПСБУОборотыДтКт

СГРУППИРОВАТЬ ПО
	ЕПСБУОборотыДтКт.СчетДт,
	ЕПСБУОборотыДтКт.Организация,
	ЕПСБУОборотыДтКт.ИФО,
	ЕПСБУОборотыДтКт.КФО,
	ЕПСБУОборотыДтКт.КПСДт,
	ЕПСБУОборотыДтКт.СубконтоДт1,
	ЕПСБУОборотыДтКт.СчетКт,
	ЕПСБУОборотыДтКт.КПСКт,
	ЕПСБУОборотыДтКт.СубконтоКт1,
	ВЫБОР
		КОГДА ЕПСБУОборотыДтКт.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
			ТОГДА ЕПСБУОборотыДтКт.СубконтоДт2
		ИНАЧЕ 0
	КОНЕЦ,
	ВЫБОР
		КОГДА ЕПСБУОборотыДтКт.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
			ТОГДА ЕПСБУОборотыДтКт.СубконтоКт2
		ИНАЧЕ 0
	КОНЕЦ</Текст>
		</Запрос>
		<Запрос Имя="ДвиженияПоСчетам26" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ЕПСБУОборотыДтКт.Организация КАК Организация,
	ЕПСБУОборотыДтКт.СчетДт КАК СчетДт,
	ЕПСБУОборотыДтКт.СубконтоДт1 КАК СубконтоДт,
	ЕПСБУОборотыДтКт.СчетКт КАК СчетКт,
	ЕПСБУОборотыДтКт.СубконтоКт1 КАК СубконтоКт,
	СУММА(ЕПСБУОборотыДтКт.СуммаОборот) КАК Сумма,
	ЕПСБУОборотыДтКт.ВалютаДт КАК ВалютаДт,
	ЕПСБУОборотыДтКт.ВалютаКт КАК ВалютаКт,
	ЕПСБУОборотыДтКт.КПСДт КАК КПСДт,
	ЕПСБУОборотыДтКт.КПСКт КАК КПСКт,
	СУММА(ЕПСБУОборотыДтКт.ВалютнаяСуммаОборотДт) КАК ВалютнаяСуммаДт,
	СУММА(ЕПСБУОборотыДтКт.ВалютнаяСуммаОборотКт) КАК ВалютнаяСуммаКт,
	СУММА(ЕПСБУОборотыДтКт.КоличествоОборотДт) КАК КоличествоДт,
	СУММА(ЕПСБУОборотыДтКт.КоличествоОборотКт) КАК КоличествоКт,
	ЕПСБУОборотыДтКт.Организация КАК ИФО,
	ЕПСБУОборотыДтКт.КФО КАК КФО,
	ЕПСБУОборотыДтКт.КЭКДт КАК КЭКДт,
	ЕПСБУОборотыДтКт.КЭККт КАК КЭККт
ИЗ
	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.ОборотыДтКт(&amp;НачДата, &amp;КонДата, , СчетДт В ИЕРАРХИИ (&amp;Счет), , СчетКт В ИЕРАРХИИ (&amp;Счет), , Организация = &amp;Учреждение) КАК ЕПСБУОборотыДтКт

СГРУППИРОВАТЬ ПО
	ЕПСБУОборотыДтКт.СчетДт,
	ЕПСБУОборотыДтКт.СубконтоДт1,
	ЕПСБУОборотыДтКт.СчетКт,
	ЕПСБУОборотыДтКт.СубконтоКт1,
	ЕПСБУОборотыДтКт.Организация,
	ЕПСБУОборотыДтКт.ВалютаКт,
	ЕПСБУОборотыДтКт.ВалютаДт,
	ЕПСБУОборотыДтКт.КПСДт,
	ЕПСБУОборотыДтКт.КПСКт,
	ЕПСБУОборотыДтКт.ИФО,
	ЕПСБУОборотыДтКт.КФО,
	ЕПСБУОборотыДтКт.КЭККт,
	ЕПСБУОборотыДтКт.КЭКДт,
	ЕПСБУОборотыДтКт.Организация

УПОРЯДОЧИТЬ ПО
	СубконтоДт</Текст>
		</Запрос>
		<Запрос Имя="ДвиженияПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ЕПСБУОборотыДтКт.Организация КАК Организация,
	ЕПСБУОборотыДтКт.СчетДт КАК СчетДт,
	ЕПСБУОборотыДтКт.СубконтоДт1 КАК СубконтоДт,
	ЕПСБУОборотыДтКт.СчетКт КАК СчетКт,
	ЕПСБУОборотыДтКт.СубконтоКт1 КАК СубконтоКт,
	СУММА(ЕПСБУОборотыДтКт.СуммаОборот) КАК Сумма,
	ЕПСБУОборотыДтКт.ВалютаДт КАК ВалютаДт,
	ЕПСБУОборотыДтКт.ВалютаКт КАК ВалютаКт,
	ЕПСБУОборотыДтКт.КПСДт КАК КПСДт,
	ЕПСБУОборотыДтКт.КПСКт КАК КПСКт,
	СУММА(ЕПСБУОборотыДтКт.ВалютнаяСуммаОборотДт) КАК ВалютнаяСуммаДт,
	СУММА(ЕПСБУОборотыДтКт.ВалютнаяСуммаОборотКт) КАК ВалютнаяСуммаКт,
	СУММА(ЕПСБУОборотыДтКт.КоличествоОборотДт) КАК КоличествоДт,
	СУММА(ЕПСБУОборотыДтКт.КоличествоОборотКт) КАК КоличествоКт,
	ЕПСБУОборотыДтКт.Организация КАК ИФО,
	ЕПСБУОборотыДтКт.КФО КАК КФО,
	ЕПСБУОборотыДтКт.КЭКДт КАК КЭКДт,
	ЕПСБУОборотыДтКт.КЭККт КАК КЭККт
ИЗ
	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.ОборотыДтКт(&amp;НачДата, &amp;КонДата, , СчетДт В ИЕРАРХИИ (&amp;Счет), ,СчетКт В ИЕРАРХИИ (&amp;Счет) , , Организация = &amp;Учреждение) КАК ЕПСБУОборотыДтКт

СГРУППИРОВАТЬ ПО
	ЕПСБУОборотыДтКт.СчетДт,
	ЕПСБУОборотыДтКт.СубконтоДт1,
	ЕПСБУОборотыДтКт.СчетКт,
	ЕПСБУОборотыДтКт.СубконтоКт1,
	ЕПСБУОборотыДтКт.Организация,
	ЕПСБУОборотыДтКт.ВалютаКт,
	ЕПСБУОборотыДтКт.ВалютаДт,
	ЕПСБУОборотыДтКт.КПСДт,
	ЕПСБУОборотыДтКт.КПСКт,
	ЕПСБУОборотыДтКт.ИФО,
	ЕПСБУОборотыДтКт.КФО,
	ЕПСБУОборотыДтКт.КЭККт,
	ЕПСБУОборотыДтКт.КЭКДт,
	ЕПСБУОборотыДтКт.Организация
</Текст>
		</Запрос>
		<Запрос Имя="МЗ_105" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ЕПСБУОборотыДтКт.Организация КАК Организация,
	ЕПСБУОборотыДтКт.КФО КАК КФО,
	ЕПСБУОборотыДтКт.СчетДт КАК СчетДт,
	ЕПСБУОборотыДтКт.КПСДт КАК КПСДт,
	ЕПСБУОборотыДтКт.СубконтоДт1 КАК СубконтоДт,
	ЕПСБУОборотыДтКт.СчетКт КАК СчетКт,
	ЕПСБУОборотыДтКт.КПСКт КАК КПСКт,
	ЕПСБУОборотыДтКт.СубконтоКт1 КАК СубконтоКт,
	СУММА(ЕПСБУОборотыДтКт.СуммаОборот) КАК Сумма,//СуммаОборотДт,
	СУММА(0) КАК СуммаОборотКт,
	ВЫБОР
		КОГДА ЕПСБУОборотыДтКт.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
			ТОГДА ЕПСБУОборотыДтКт.СубконтоДт2
		ИНАЧЕ 0
	КОНЕЦ КАК Субконто2,
	ВЫБОР
		КОГДА ЕПСБУОборотыДтКт.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
			ТОГДА ЕПСБУОборотыДтКт.СубконтоКт2
		ИНАЧЕ 0
	КОНЕЦ КАК КорСубконто2,
	ЕПСБУОборотыДтКт.Организация КАК ИФО,
	ЕПСБУОборотыДтКт.КЭКДт КАК КЭКДт,
	ЕПСБУОборотыДтКт.КЭККт КАК КЭККт
ИЗ
	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.ОборотыДтКт(&amp;НачалоПериода, &amp;КонецПериода, Регистратор, СчетДт В ИЕРАРХИИ (&amp;счет), , , , Организация = &amp;Организация) КАК ЕПСБУОборотыДтКт

СГРУППИРОВАТЬ ПО
	ЕПСБУОборотыДтКт.СчетДт,
	ЕПСБУОборотыДтКт.Организация,
	ЕПСБУОборотыДтКт.КФО,
	ЕПСБУОборотыДтКт.КПСДт,
	ЕПСБУОборотыДтКт.СубконтоДт1,
	ЕПСБУОборотыДтКт.СчетКт,
	ЕПСБУОборотыДтКт.КПСКт,
	ЕПСБУОборотыДтКт.СубконтоКт1,
	ВЫБОР
		КОГДА ЕПСБУОборотыДтКт.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
			ТОГДА ЕПСБУОборотыДтКт.СубконтоДт2
		ИНАЧЕ 0
	КОНЕЦ,
	ВЫБОР
		КОГДА ЕПСБУОборотыДтКт.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
			ТОГДА ЕПСБУОборотыДтКт.СубконтоКт2
		ИНАЧЕ 0
	КОНЕЦ,
	ЕПСБУОборотыДтКт.ИФО,
	ЕПСБУОборотыДтКт.Организация,
	ЕПСБУОборотыДтКт.КЭКДт,
	ЕПСБУОборотыДтКт.КЭККт</Текст>
		</Запрос>
		<Запрос Имя="ОС_101_106" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ЕПСБУОборотыДтКт.Организация КАК Организация,
	ЕПСБУОборотыДтКт.Организация КАК ИФО,
	ЕПСБУОборотыДтКт.КФО КАК КФО,
	ЕПСБУОборотыДтКт.СчетДт КАК СчетДт,
	ЕПСБУОборотыДтКт.КПСДт КАК КПСДт,
	ЕПСБУОборотыДтКт.СубконтоДт1 КАК СубконтоДт,
	ЕПСБУОборотыДтКт.КПСКт КАК КПСКт,
	ЕПСБУОборотыДтКт.СубконтоКт1 КАК СубконтоКт,
	СУММА(ЕПСБУОборотыДтКт.СуммаОборот) КАК Сумма,
	СУММА(0) КАК СуммаОборотКт,
	ВЫБОР
		КОГДА ЕПСБУОборотыДтКт.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
			ТОГДА ЕПСБУОборотыДтКт.СубконтоДт2
		ИНАЧЕ 0
	КОНЕЦ КАК СубконтоДт2,
	ВЫБОР
		КОГДА ЕПСБУОборотыДтКт.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
			ТОГДА ЕПСБУОборотыДтКт.СубконтоКт2
		ИНАЧЕ 0
	КОНЕЦ КАК СубконтоКт2,
	ЕПСБУОборотыДтКт.Период КАК Период,
	ЕПСБУОборотыДтКт.СчетКт КАК СчетКт,
	ЕПСБУОборотыДтКт.КЭКДт КАК КЭКДт,
	ЕПСБУОборотыДтКт.КЭККт КАК КЭККт
ИЗ
	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.ОборотыДтКт(&amp;НачалоПериода, &amp;КонецПериода, Регистратор, СчетДт В ИЕРАРХИИ (&amp;счет), , СчетКт В ИЕРАРХИИ (&amp;счет), , Организация = &amp;Организация) КАК ЕПСБУОборотыДтКт

СГРУППИРОВАТЬ ПО
	ЕПСБУОборотыДтКт.СчетДт,
	ЕПСБУОборотыДтКт.Организация,
	ЕПСБУОборотыДтКт.КФО,
	ЕПСБУОборотыДтКт.КПСДт,
	ЕПСБУОборотыДтКт.СубконтоДт1,
	ЕПСБУОборотыДтКт.КПСКт,
	ЕПСБУОборотыДтКт.СубконтоКт1,
	ВЫБОР
		КОГДА ЕПСБУОборотыДтКт.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
			ТОГДА ЕПСБУОборотыДтКт.СубконтоДт2
		ИНАЧЕ 0
	КОНЕЦ,
	ВЫБОР
		КОГДА ЕПСБУОборотыДтКт.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
			ТОГДА ЕПСБУОборотыДтКт.СубконтоКт2
		ИНАЧЕ 0
	КОНЕЦ,
	ЕПСБУОборотыДтКт.Период,
	ЕПСБУОборотыДтКт.КЭКДт,
	ЕПСБУОборотыДтКт.КЭККт,
	ЕПСБУОборотыДтКт.СчетКт,
	ЕПСБУОборотыДтКт.Организация</Текст>
		</Запрос>
	</Запросы>
</ПравилаОбмена>